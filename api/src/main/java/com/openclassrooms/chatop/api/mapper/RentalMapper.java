package com.openclassrooms.chatop.api.mapper;

import com.openclassrooms.chatop.api.dto.RentalDTO;
import com.openclassrooms.chatop.api.dto.request.RentalRequest.*;
import com.openclassrooms.chatop.api.model.Rental;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import java.util.List;

import org.mapstruct.MappingTarget;
import org.mapstruct.NullValuePropertyMappingStrategy;
import org.mapstruct.factory.Mappers;

/**
 * MapStruct mapper for Rental entity to RentalDTO conversions.
 * This interface automatically generates the implementation at compile time.
 */
@Mapper(componentModel = "spring")
public interface RentalMapper {

    RentalMapper INSTANCE = Mappers.getMapper(RentalMapper.class);

    // -----------------------------
    // Entity -> DTO
    // -----------------------------

    @Mapping(source = "owner.id", target = "owner_id")
    @Mapping(source = "createdAt", target = "created_at")
    @Mapping(source = "updatedAt", target = "updated_at")
    RentalDTO toDto(Rental rental);

    List<RentalDTO> toDtoList(List<Rental> rentals);

    // -----------------------------
    // DTO -> Entity
    // -----------------------------

    /**
     * Map CreateRentalRequest to a Rental entity.
     * Note: owner and picture should be set in the service.
     */
    @Mapping(target = "id", ignore = true) // ID is generated by DB
    @Mapping(target = "owner", ignore = true) // Will be set in service
    @Mapping(target = "picture", ignore = true) // Will be set in service
    @Mapping(target = "createdAt", ignore = true) // Handled by JPA
    @Mapping(target = "updatedAt", ignore = true) // Handled by JPA
    Rental toEntity(CreateRentalRequest request);

    /**
     * Update an existing Rental entity from UpdateRentalRequest.
     * Only non-null fields in request will overwrite entity.
     * NullValuePropertyMappingStrategy.IGNORE ensures null values are skipped.
     */
    @Mapping(target = "id", ignore = true)
    @Mapping(target = "owner", ignore = true)
    @Mapping(target = "picture", ignore = true)
    @Mapping(target = "createdAt", ignore = true)
    @Mapping(target = "updatedAt", ignore = true)
    @Mapping(target = "name", nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
    @Mapping(target = "surface", nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
    @Mapping(target = "price", nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
    @Mapping(target = "description", nullValuePropertyMappingStrategy = NullValuePropertyMappingStrategy.IGNORE)
    void updateFromRequest(UpdateRentalRequest request, @MappingTarget Rental rental);
}
